- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: latest
    update_cache: true

- name: Install Docker Module for Python
  pip:
    name: docker

#**Old configuration

#- name: make directory for deb_packages directory
  #become_user: ldraney
  #ansible.builtin.file:
    #path: /home/ldraney/{{ item }}
    #state: directory
    #mode: '0755'
  #with_items:
    #- deb_packages

##- name: check if docker packages exist loop
  ##ansible.builtin.stat: 
    ##path: /home/ldraney/deb_packages/{{ item }}
  ##with_items: "{{ docker_files }}"
  ##ignore_errors: True
  ##register: stat_results

#- name:  download package if it doesn't exist
  #become_user: ldraney
  #ansible.builtin.get_url:
    #dest: /home/ldraney/deb_packages/{{ item }}
    #url: https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/{{ item }}
  #with_items: "{{ docker_files }}"
  ##with_items: "{{ stat_results.results }}"
  ##when: item.stat.exists == False
  ##when: item.stat.exists == False
  ##register: dockerDownloaded

    ##DEBUG 
##- name: dockerDownloadedVariable
  ##ansible.builtin.debug:
    ##msg: "{{ dockerDownloaded }}"
  ##when: dockerDownloaded is defined

##- name: check if docker is installed
  ##register: dockerInstalled
  ##stat: 
    ##path: "{{ item }}"
  ##with_items: 
    ##- /usr/bin/docker
    ##- /etc/docker
    ##- /usr/libexec/docker

#- name: update
  ##when: dockerDownloaded.changed == "true"
  ##when: item.changed == "true"
  ##with_items: "{{ dockerInstalled.results }}"
  #ansible.builtin.apt:
    #update_cache: yes

#- name: install docker
  ##when: item.stat.exists == False
  #apt:
    ##name: 
    #deb: /home/ldraney/deb_packages/{{ item }}
  #with_items: "{{ docker_files }}"
  ##with_items: "{{ stat_results.results }}"
  ##when: dockerInstalled.item.stat.exists == False
  ##when: item.stat.exists == False
  ##with_items: "{{ dockerInstalled.results }}"
  ##with_items:
    ##- docker-ce-cli_20.10.17~3-0~ubuntu-jammy_amd64.deb
    ##- containerd.io_1.6.8-1_amd64.deb
    ##- docker-ce_20.10.17~3-0~ubuntu-jammy_amd64.deb
    ##- docker-compose-plugin_2.6.0~ubuntu-jammy_amd64.deb
